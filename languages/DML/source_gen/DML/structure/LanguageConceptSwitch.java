package DML.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int AbstractSection = 0;
  public static final int BooleanPrimitiveType = 1;
  public static final int Cardinality = 2;
  public static final int CommentLine = 3;
  public static final int ComplexType = 4;
  public static final int ComplexTypeBody = 5;
  public static final int DatePrimitiveType = 6;
  public static final int EmptyLine = 7;
  public static final int EnumPrimitiveType = 8;
  public static final int EnumValue = 9;
  public static final int Field = 10;
  public static final int Model = 11;
  public static final int NumericPrimitiveType = 12;
  public static final int PrimitiveType = 13;
  public static final int SectionList = 14;
  public static final int TextPrimitiveType = 15;
  public static final int Type = 16;
  public static final int Unit = 17;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x432aa8f9d91b4617L, 0x8bf766a97fe245baL);
    builder.put(0x21e19c113eaf1f28L, AbstractSection);
    builder.put(0x71b6a2d9440b7299L, BooleanPrimitiveType);
    builder.put(0x71b6a2d94402f199L, Cardinality);
    builder.put(0x21e19c113eb1d7b1L, CommentLine);
    builder.put(0x71b6a2d943ff46f9L, ComplexType);
    builder.put(0x21e19c113eb569b8L, ComplexTypeBody);
    builder.put(0x71b6a2d944091fb2L, DatePrimitiveType);
    builder.put(0x21e19c113eaf27caL, EmptyLine);
    builder.put(0x71b6a2d9440e21f5L, EnumPrimitiveType);
    builder.put(0x71b6a2d9440e21faL, EnumValue);
    builder.put(0x71b6a2d94402f196L, Field);
    builder.put(0x71b6a2d943fffb36L, Model);
    builder.put(0x71b6a2d94409a17dL, NumericPrimitiveType);
    builder.put(0x71b6a2d943fffb33L, PrimitiveType);
    builder.put(0x21e19c113eaf270cL, SectionList);
    builder.put(0x71b6a2d9440a371bL, TextPrimitiveType);
    builder.put(0x71b6a2d94406d628L, Type);
    builder.put(0x71b6a2d94407442eL, Unit);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
